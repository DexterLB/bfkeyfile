#!/usr/bin/ash

run_hook ()
{
    local encfile decfile iteration attempts prompt badpassword dev arg1 arg2 retcode password passwordHash

    if [ "x${bfkf}" != "x" ]; then
        encfile="/enc_keyfile.bin"
        decfile="/crypto_keyfile.bin"

        iteration=1000
        attempts=0

        prompt="DON'T PANIC! "
        badpassword="Well, you might start panicking now."
        failmsg="eat shit."
        progressmsg="Doing some top secret stuff..."
        donemsg="done."

        dev="$(echo "${bfkf}" | cut -d: -f1)"
        arg1="$(echo "${bfkf}" | cut -d: -f2)"
        arg2="$(echo "${bfkf}" | cut -d: -f3)"

        if poll_device "${dev}" "${rootdelay}"; then
            case "${arg1}" in
                *[!0-9]*)
                    mkdir /mntkey
                    mount -r -t "${arg1}" "${dev}" /mntkey
                    dd if="/mntkey/${arg2}" of="${encfile}" >/dev/null 2>&1
                    umount /mntkey
                    rm -rf /mntkey
                    ;;
                *)
                    dd if="${dev}" of="${encfile}" bs=1 skip="${arg1}" count="${arg2}" >/dev/null 2>&1
                    ;;
            esac
        fi

        if [ -f "${encfile}" ]; then
            while true; do
                clear
                read -rsp "${prompt}" password
        echo
        echo -n "${progressmsg}"
                i=0
                while [ ${i} -lt ${iteration} ]; do
                    password=`echo -n "${password}" | openssl dgst -whirlpool -hex 2> /dev/null | cut -d ' ' -f 2`
                    i=$(( ${i} + 1 ))
                done
                openssl bf-cbc -pass pass:"${password}" -d -in "${encfile}" -out "${decfile}" >/dev/null 2>&1
                retcode="$?"
                if [ "${retcode}" != "0" ]; then
                    if [ "${attempts}" == "0" ]; then
                        echo "${failmsg}"
                        sleep 1
                        poweroff -f
                        break
                        else
                        echo -e "\n${badpassword}\n"
                        attempts=$(( ${attempts} - 1 ))
                    fi
                else
                    echo "${donemsg}"
                    break
                fi
            done

            rm -f "${encfile}"
        else
            echo "Encrypted keyfile could not be opened. Reverting to 'encrypt' hook."
        fi
    fi
}
